<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- Scan classpath for annotations (eg: @Service, @Repository etc) -->
	<context:component-scan base-package="ac.tuwien.ase08.tripitude" />
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	  <property name="maxUploadSize" value="20971520"/>
	</bean>
    
	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
	

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="jdbc.properties" />

	</bean>

	<!-- JDBC Data Source. It is assumed you have MySQL running on localhost 
		port 3306 with username root and blank password. Change below if it's not 
		the case -->
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
		<!-- <property name="url" value="jdbc:mysql://localhost:3306/tripitude" 
			/> -->
		<!-- <property name="username" value="root" /> -->
		<!-- <property name="password" value="" /> -->
		<!-- <property name="validationQuery" value="SELECT 1" /> -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
	</bean>

	<!-- Hibernate Session Factory -->
	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan">
			<array>
				<value>ac.tuwien.ase08.tripitude</value>
			</array>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${jdbc.dialect}
				hibernate.hbm2ddl.auto=${jdbc.hbm2ddl.auto}
			</value>
		</property>
	</bean>
	
	<!-- had an error autowiring the services and this line fixed it -->
	<bean class="org.springframework.mock.web.MockServletContext"/>

	<!-- Hibernate Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
 
    <!-- Activates annotation based transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- Resources -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
				<value>errors</value>
				<value>google</value>
				<value>mapitem_categories</value>
			</list>
		</property>
	</bean>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="myDataSource"
				users-by-username-query="select email, password, 1
             							from user where email = ?"
				authorities-by-username-query="SELECT u.email, r.role FROM user u
												JOIN role r ON (r.id = u.role_id )
												WHERE u.email = ?" />
			<security:password-encoder hash="sha">
				<security:salt-source system-wide="qsease08"/>
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	
</beans>
